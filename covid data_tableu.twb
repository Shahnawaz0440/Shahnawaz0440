<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='coviddata_17305728439100' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (TableuTable 3)' inline='true' name='federated.00o7ffi1fxb2ib174o4e104kthzo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableuTable 3' name='excel-direct.1bj5iej1prcz2118ctx500aqtujr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zamee/OneDrive/Desktop/projects2024/TableuTable 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1bj5iej1prcz2118ctx500aqtujr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D437:no:A1:D437:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D437:no:A1:D437:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/zamee/AppData/Local/Temp/TableauTemp/#TableauTemp_1o5h8f51pjpnfl131y3z71nt6ggm.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/02/2024 04:16:32 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_B2D34273093247CDB5A1DB3732E3EF63]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B2D34273093247CDB5A1DB3732E3EF63'>
            <properties context=''>
              <relation connection='excel-direct.1bj5iej1prcz2118ctx500aqtujr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D437:no:A1:D437:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableu table 1)' inline='true' name='federated.0sasfqa1sm67pl1f2ygsj1yo43ad' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableu table 1' name='excel-direct.1axzlfc0678htz1bpcx2105f0963'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zamee/OneDrive/Desktop/projects2024/tableu table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1axzlfc0678htz1bpcx2105f0963' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/zamee/AppData/Local/Temp/TableauTemp/#TableauTemp_0q96an715540uf1bugc0d07ki373.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/02/2024 04:14:48 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F768FEFF29EF42E1BD5C5F8B6692F76F'>
            <properties context=''>
              <relation connection='excel-direct.1axzlfc0678htz1bpcx2105f0963' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableubtable2)' inline='true' name='federated.10zmpu01tr2alt10ihpuv1kwwo31' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableubtable2' name='excel-direct.11lxxyw0edpi47137sl3y136k6kl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zamee/OneDrive/Desktop/projects2024/tableubtable2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11lxxyw0edpi47137sl3y136k6kl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B8:no:A1:B8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C15A0134F32A4C5D83828E2B86F91FB8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C15A0134F32A4C5D83828E2B86F91FB8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C15A0134F32A4C5D83828E2B86F91FB8]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/zamee/AppData/Local/Temp/TableauTemp/#TableauTemp_1e88g9h0xetxeo1bgm4qd1xp4tzu.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/02/2024 04:15:20 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_C15A0134F32A4C5D83828E2B86F91FB8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_C15A0134F32A4C5D83828E2B86F91FB8]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C15A0134F32A4C5D83828E2B86F91FB8'>
            <properties context=''>
              <relation connection='excel-direct.11lxxyw0edpi47137sl3y136k6kl' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (TableuTable4)' inline='true' name='federated.1k96k840h5y3c51g52ydf1g5l6h5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TableuTable4' name='excel-direct.08vb2yu117o3r519y998604l54e5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/zamee/OneDrive/Desktop/projects2024/TableuTable4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08vb2yu117o3r519y998604l54e5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D95E6616EBBA497985C08412BCD69A89]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/zamee/AppData/Local/Temp/TableauTemp/#TableauTemp_1unjyv60k4xnnp1gqb8ss091dcy3.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/02/2024 04:16:54 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>354</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>694</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1617</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20129</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36133</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_D95E6616EBBA497985C08412BCD69A89]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D95E6616EBBA497985C08412BCD69A89'>
            <properties context=''>
              <relation connection='excel-direct.08vb2yu117o3r519y998604l54e5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableu table 1)' name='federated.0sasfqa1sm67pl1f2ygsj1yo43ad' />
          </datasources>
          <datasource-dependencies datasource='federated.0sasfqa1sm67pl1f2ygsj1yo43ad'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]' value='139' />
            <format attr='height' value='65' />
            <format attr='color' value='#606b76' />
            <format attr='text-format' field='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#e2e6f0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f6eee3' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#79706e' />
            <format attr='stroke-color' scope='cols' value='#75a1c7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6E4796C9-1030-4B92-855D-3240730EC9B2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableubtable2)' name='federated.10zmpu01tr2alt10ihpuv1kwwo31' />
          </datasources>
          <datasource-dependencies datasource='federated.10zmpu01tr2alt10ihpuv1kwwo31'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[sum:TotalDeathCount:qk]' field-type='quantitative' max='1200000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]' value='90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0984530448913574' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='630' />
                <format attr='maxwidth' value='630' />
                <format attr='minheight' value='502' />
                <format attr='maxheight' value='502' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zmpu01tr2alt10ihpuv1kwwo31].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{132CC28A-6131-47BA-AF42-EEA183C6EE4E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected per country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableuTable 3)' name='federated.00o7ffi1fxb2ib174o4e104kthzo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00o7ffi1fxb2ib174o4e104kthzo'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00o7ffi1fxb2ib174o4e104kthzo].[Longitude (generated)]' field-type='quantitative' max='35739062.962051854' min='5798804.4200546406' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00o7ffi1fxb2ib174o4e104kthzo].[Latitude (generated)]' field-type='quantitative' max='19455763.015404407' min='-19780025.732327804' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00o7ffi1fxb2ib174o4e104kthzo].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00o7ffi1fxb2ib174o4e104kthzo].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00o7ffi1fxb2ib174o4e104kthzo].[none:Location:nk]' />
              <color column='[federated.00o7ffi1fxb2ib174o4e104kthzo].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.00o7ffi1fxb2ib174o4e104kthzo].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00o7ffi1fxb2ib174o4e104kthzo].[Latitude (generated)]</rows>
        <cols>[federated.00o7ffi1fxb2ib174o4e104kthzo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6DF2909E-0CF8-4C59-AAEB-D203105012D4}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TableuTable4)' name='federated.1k96k840h5y3c51g52ydf1g5l6h5' />
          </datasources>
          <datasource-dependencies datasource='federated.1k96k840h5y3c51g52ydf1g5l6h5'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[tmn:date:qk]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]' />
              <text column='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]' />
              <color column='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Forecast Indicator:nk]' />
              <text column='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{BC743A91-DCFA-4C97-9EE2-EA84DD822A03}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2CD505CD-1A00-43AD-95C7-E9999C068540}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='15' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='13' type-v2='layout-basic' w='89378' x='483' y='999'>
              <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='34279' x='55582' y='999'>
                <zone fixed-size='373' h='98002' id='10' is-fixed='true' name='Sheet 3' w='34279' x='55582' y='999'>
                  <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='18102' id='3' name='Sheet 1' w='55099' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44320' id='5' name='Sheet 2' w='55099' x='483' y='19101'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35580' id='12' name='Sheet 4' w='55099' x='483' y='63421'>
                <layout-cache minheight='213' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98002' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='999'>
              <zone h='6992' id='16' name='Sheet 4' param='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]' type-v2='highlighter' w='9656' x='89861' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='21' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='137' h='18102' id='3' is-fixed='true' name='Sheet 1' w='55099' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98002' id='10' is-fixed='true' name='Sheet 3' w='34279' x='55582' y='999'>
                  <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44320' id='5' is-fixed='true' name='Sheet 2' w='55099' x='483' y='19101'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6992' id='16' name='Sheet 4' param='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]' type-v2='highlighter' w='9656' x='89861' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='35580' id='12' is-fixed='true' name='Sheet 4' w='55099' x='483' y='63421'>
                  <layout-cache minheight='213' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0CE38B48-09DF-46CC-80B3-F67DCDEBFC77}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sasfqa1sm67pl1f2ygsj1yo43ad].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C1E3787-AC78-4973-99CE-97C5AB967E84}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.10zmpu01tr2alt10ihpuv1kwwo31].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.10zmpu01tr2alt10ihpuv1kwwo31].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C745C7AD-E2AD-460B-B2D8-B76392CE5B75}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00o7ffi1fxb2ib174o4e104kthzo].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6A45663-168D-4091-94BE-CFB150959A66}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]&#10;[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Forecast Indicator:nk]</field>
            <field>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]</field>
            <field>[federated.1k96k840h5y3c51g52ydf1g5l6h5].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B23AC2A7-5AFE-4408-BD0E-4DCF4244B651}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{54159E7D-3778-4985-B03A-853F64D580D0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='fit-width' />
          <highlight field='[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Location:nk]&#10;[federated.1k96k840h5y3c51g52ydf1g5l6h5].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{84384BD3-9E4E-4F32-B091-01339EC30853}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      NtXvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='89' name='Sheet 1' width='192'>
      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
      Sft/ZD2BFREmJxMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
